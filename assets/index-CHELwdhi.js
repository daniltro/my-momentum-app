var m=Object.defineProperty;var p=(a,t,e)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var c=(a,t,e)=>p(a,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=e(o);fetch(o.href,r)}})();class y{constructor(t,e){this.weatherService=t,this.ui=e,this.weatherData=null,this.weatherCityInput=document.querySelector(".weather__city"),this.saveCityButton=document.querySelector(".save-city-button")}async init(){this.weatherCityInput.value=localStorage.getItem("city")||"Краснодар",document.addEventListener("DOMContentLoaded",()=>this.getUserWeather()),this.saveCityButton.addEventListener("click",()=>this.saveCity()),this.weatherCityInput.addEventListener("focus",()=>this.activateSaveButton()),this.weatherCityInput.addEventListener("blur",()=>this.deactivateSaveButton())}async getUserWeather(){try{let t=localStorage.getItem("city");if(t)this.weatherData=await this.weatherService.getWeather(t);else{const e=await this.weatherService.getLocation();this.weatherData=await this.weatherService.getWeather(e)}this.ui.updateWeatherUI(this.weatherData)}catch(t){console.error(t)}}saveCity(){const t=this.weatherCityInput.value;localStorage.setItem("city",t),this.getUserWeather()}activateSaveButton(){this.saveCityButton.classList.add("active")}deactivateSaveButton(){setTimeout(()=>{this.saveCityButton.classList.remove("active")},100)}}const g={request:{type:"City",query:"New York, United States of America",language:"en",unit:"m"},location:{name:"New York",country:"United States of America",region:"New York",lat:"40.714",lon:"-74.006",timezone_id:"America/New_York",localtime:"2024-10-10 19:23",localtime_epoch:1728588180,utc_offset:"-4.0"},current:{observation_time:"11:23 PM",temperature:14,weather_code:113,weather_icons:["https://cdn.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png"],weather_descriptions:["Clear"],wind_speed:22,wind_degree:332,wind_dir:"NNW",pressure:1019,precip:0,humidity:42,cloudcover:0,feelslike:13,uv_index:0,visibility:16,is_day:"no"}},w={Sunny:"Солнечно","Partly cloudy":"Переменная облачность",Overcast:"Пасмурно","Light rain shower":"Лёгкий дождь","Heavy rain":"Сильный дождь",Snow:"Снег",Thunderstorm:"Гроза",Mist:"Туман",Fog:"Мгла",Clear:"Ясно"};class f{constructor(){this.apiKey="3befaad8c74b8d2c4f5a9607979164d6",this.useFakeData=!1}async getLocation(){return new Promise((t,e)=>{navigator.geolocation.getCurrentPosition(s=>{const o={latitude:s.coords.latitude,longitude:s.coords.longitude};t(o)},s=>{e(s)})})}async getWeather(t){if(this.useFakeData)return g;let e;if(typeof t=="object"&&t.latitude&&t.longitude)e=`https://api.weatherstack.com/current?access_key=${this.apiKey}&query=${t.latitude},${t.longitude}`;else if(typeof t=="string")e=`https://api.weatherstack.com/current?access_key=${this.apiKey}&query=${t}`;else throw new Error("Неверный формат для параметра location");const s=await fetch(e);if(!s.ok)throw new Error("Ошибка запроса");return await s.json()}}class v{constructor(){this.weatherTemperature=document.querySelector(".weather__temperature"),this.weatherDescription=document.querySelector(".weather__description"),this.weatherLogo=document.querySelector(".weather-logo")}updateWeatherUI(t){const e=t.current.temperature+"°",s=t.current.weather_descriptions[0];function o(i){return w[i]||i}const r=t.current.weather_icons[0];this.weatherLogo.style.backgroundImage=`url(${r})`,this.weatherTemperature.textContent=e,this.weatherDescription.textContent=o(s)}}class S{constructor(){this.body=document.body}setBackground(){let t=new Date().getHours(),e="";t>=0&&t<=6?e="url('/my-momentum-app/images/01.jpg') no-repeat center center / cover":t>6&&t<=12?e="url('/my-momentum-app/images/02.jpg') no-repeat center center / cover":t>=12&&t<=18?e="url('/my-momentum-app/images/03.jpg') no-repeat center center / cover":t>18&&(e="url('/my-momentum-app/images/04.jpg') no-repeat center center / cover"),this.body.style.background=e,this.body.style.backgroundAttachment="fixed"}}class k{constructor(){this.date=document.querySelector(".date"),this.time=document.querySelector(".time"),this.updateTime(),this.startClock()}updateTime(){const t=new Date,e=String(t.getHours()).padStart(2,"0"),s=String(t.getMinutes()).padStart(2,"0"),o=String(t.getSeconds()).padStart(2,"0");this.time.textContent=`${e}:${s}:${o}`}startClock(){setInterval(()=>{this.updateTime()},1e3)}showDate(){const t=new Date,e=t.getMonth();console.log(e);const s=t.getDate();this.date.textContent=this.formatDate(s,e,s)}formatDate(t,e,s){const o=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],r=["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],i=String(t).padStart(2,"0"),n=o[e],h=new Date(s,e,t).getDay(),l=r[h];return`${i} ${n}, ${l}`}}class L{constructor(t){c(this,"handleEnterPress",t=>{t.key==="Enter"&&this.addTodo()});this.todos=t,this.todoList=document.querySelector(".todo-list"),this.todoInput=document.querySelector(".add-todo-input"),this.addTodoButton=document.querySelector(".add-todo-button"),this.clearTodosButton=document.querySelector(".clear-todos-button"),this.todoTemplate=document.querySelector("#todo-template").content,this.addTodoButton.addEventListener("click",()=>{this.addTodo()}),this.todoInput.addEventListener("focus",()=>{document.addEventListener("keydown",this.handleEnterPress)}),this.todoInput.addEventListener("blur",()=>{document.removeEventListener("keydown",this.handleEnterPress)}),this.clearTodosButton.addEventListener("click",()=>{this.clearTodos()})}setTodos(t){t&&(this.todos.push({text:t,completed:!1}),localStorage.setItem("todos",JSON.stringify(this.todos)))}addTodo(){const t=this.todoInput.value;this.setTodos(t),this.todoInput.value="",this.showTodos()}getTodos(){return this.todos}showTodos(){this.todoList.innerHTML="",this.todos.forEach((t,e)=>{const s=this.todoTemplate.cloneNode(!0),o=s.querySelector(".todo-list__item"),r=s.querySelector(".todo-text"),i=s.querySelector(".todo-checkbox"),n=s.querySelector(".delete-todo-button");t.completed&&o.classList.add("completed"),r.textContent=t.text,i.checked=t.completed,i.addEventListener("change",()=>{this.todos[e].completed=i.checked,localStorage.setItem("todos",JSON.stringify(this.todos)),i.checked?o.classList.add("completed"):o.classList.remove("completed")}),n.addEventListener("click",()=>{this.deleteTodo(e)}),this.todoList.appendChild(s)})}deleteTodo(t){this.todos.splice(t,1),localStorage.setItem("todos",JSON.stringify(this.todos)),this.showTodos()}clearTodos(){this.todos=[],localStorage.removeItem("todos"),this.showTodos()}}const d=JSON.parse(localStorage.getItem("todos"))||[];console.log(d);const T=new f,_=new v,D=new y(T,_),I=new S,u=new k,b=new L(d);b.showTodos();u.startClock();u.showDate();I.setBackground();D.init();
